/*!
 * ch-website
 * Personal Website
 * https://c-h-.github.io/
 * @author Charles Hulcher
 * @version 1.0.0
 * Copyright 2016. MIT licensed.
 */
.clear:after,.clear:before{content:' ';display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}body{font-family:Hind,sans-serif;background-color:#f8f9fa;overflow-x:hidden}section{width:1024px;margin:0 auto 8rem}h1,h2,h3,h4,h5,h6{font-family:Montserrat,sans-serif;color:#212529}h2{font-size:3rem;margin:0 0 2.5rem}h3{text-transform:uppercase;font-size:1rem;margin:0}h3,h4{color:#adb5bd;font-family:Hind,sans-serif}h4{margin:.3rem 0 1rem}p{margin:0 0 1rem}pre{margin-top:0}.columns{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}a:active{outline:0}.link{color:#228ae6;transition:color .2s ease-in-out;display:block;margin-bottom:1rem}.link:hover{color:#4dadf7}.tags{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;margin:0 0 1rem;-ms-flex-wrap:wrap;flex-wrap:wrap}.tags span{display:block;padding:.4rem .5rem .2rem;font-size:.8rem;text-transform:uppercase;background-color:#adb5bd;border-radius:1rem;color:#fff;margin-right:.5rem;margin-bottom:.5rem;cursor:default}.tags span:last-child{margin-right:0}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{text-align:center;font-size:3em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header>h1{margin:4rem 0}.hero .about-me,.hero>a{-ms-flex:1;flex:1}.hero>a{height:29rem}.hero>a .slideshow{height:100%}.hero div{font-size:1.2rem;box-sizing:border-box;margin-right:2rem}.hero div:last-child{margin-right:0}.slideshow{position:relative;min-height:300px}.slideshow>div,.slideshow>img{position:absolute;top:0;left:0;right:0;display:block;max-width:90%;max-height:100%;margin:0 auto;opacity:0}.slideshow.enabled>div,.slideshow.enabled>iframe,.slideshow.enabled>img{opacity:0;transition:all .5s ease-in-out;box-shadow:0 0 0 #ced4da}.slideshow.enabled>div.active,.slideshow.enabled>iframe.active,.slideshow.enabled>img.active,.slideshow:not(.enabled)>div:first-child,.slideshow:not(.enabled)>iframe:first-child,.slideshow:not(.enabled)>img:first-child{box-shadow:0 20px 20px #ced4da;opacity:1}.slideshow>.vid{width:90%;margin:0 auto;display:block}.social{margin-top:2rem}.social>a{color:#f8f9fa;background:#495057;text-decoration:none;display:block;border-radius:50%;width:2rem;height:2rem;text-align:center;line-height:2.4rem;margin-right:.6rem;font-size:1rem;transition:background-color .3s ease-in-out}.social>a:hover{background-color:#228ae6}.social>a:last-child{margin-right:0}.social>a.socicon-facebook,.social>a.socicon-github,.social>a.socicon-instagram,.social>a.socicon-twitter{line-height:2.5rem}.project{margin-bottom:8rem}.project .body{width:40%}.project .slideshow{width:60%}.project .columns>.vid{width:60%;margin:0 1rem;box-sizing:border-box;box-shadow:0 20px 20px #ced4da}.project:nth-child(odd) .columns{-ms-flex-direction:row-reverse;flex-direction:row-reverse}.more-projects h3{margin-left:auto;margin-right:auto}.more-projects .body,.more-projects .slideshow{-ms-flex:1;flex:1}.card-container-outer{position:relative;overflow:hidden}.card-container-outer:after,.card-container-outer:before{content:'';display:block;opacity:1;position:absolute;top:0;right:-15px;height:100%;width:15px;box-shadow:0 0 20px #adb5bd;transition:opacity .3s ease-in-out}.card-container-outer:before{right:auto;left:-15px}.card-container-outer.hide-left:before,.card-container-outer.hide-right:after{opacity:0}.card-container{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;width:100%;overflow-x:auto;padding:1rem 2rem 40px;-ms-flex-align:start;align-items:flex-start}.card-container .card{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-negative:0;flex-shrink:0;background-color:#fff;border-radius:1rem;padding:1rem;box-shadow:0 20px 20px #ced4da;width:30rem;margin-right:2rem}.card-container .card.small{width:20rem}.card-container .card:last-child{position:relative}.card-container .card:last-child:after{content:' ';display:block;width:1rem;height:100%;position:absolute;right:-1rem;top:0}.card-container .card h2{font-size:1.4rem;margin:.3rem 0 1rem}.card-container .card .body{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;height:100%}.card-container .card .columns{height:100%}.blog .columns>div{width:50%;box-sizing:border-box;padding-right:2rem}.blog .columns>div:last-child{padding-right:0}.blog .columns>div h2{margin-bottom:0;font-size:2rem;text-decoration:underline;color:#228ae6;transition:color .3s ease-in-out}.blog a{text-decoration:none}.blog a:hover h2{color:#4dadf7}.footer{padding:2rem 0;width:1024px;margin:0 auto;color:#adb5bd}.footer .columns{-ms-flex-pack:justify;justify-content:space-between}.footer h4,.footer p{margin:0}.footer a{color:#4dadf7}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}input,label,textarea{display:block}label{color:#212529;margin:1rem 0 .1rem}input,textarea{border:1px solid #ced4da;resize:none;padding:.5rem;border-radius:4px;width:300px}input:focus,textarea:focus{outline:0}input[type=submit]{margin-top:1rem;background-color:#228ae6;color:#fff;border-radius:.5rem;transition:background-color .3s ease-in-out;cursor:pointer}input[type=submit]:hover{background-color:#4dadf7}@media only screen and (max-width:768px){section{margin-bottom:5rem}h2{padding:0 2rem;font-size:2rem}.credits,h2,h3,h4{text-align:center}form label{width:300px;margin:1rem auto .1rem}form input,form textarea{margin:0 auto}.hero>a,.hero>a .slideshow{height:auto}.slideshow{min-height:200px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center}.slideshow>div,.slideshow>iframe,.slideshow>img{top:auto}.project{margin-bottom:4rem}.columns:not(.social){-ms-flex-direction:column;flex-direction:column;padding:0 2rem}.columns:not(.social)>*{margin-bottom:2rem!important}.columns:not(.social)>:not(.vid){width:100%!important}.columns:not(.social)>:last-child{margin-bottom:0!important}.columns:not(.social)>.vid{width:90%;margin:0 auto}.social{-ms-flex-pack:center;justify-content:center}.project:nth-child(odd) .columns{-ms-flex-direction:column;flex-direction:column}.card-container .card{width:20rem}.blog .columns>div{padding-right:0}.blog .columns>div h2{font-size:1.5rem}.blog .columns>div>a:first-child{display:block;margin-bottom:4rem}}@media only screen and (max-width:1024px){.footer,section{width:100vw}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvX2NsZWFyZml4LnNjc3MiLCJzdHlsZS5jc3MiLCJtb2R1bGVzL19kZWZhdWx0cy5zY3NzIiwibW9kdWxlcy9fdmFycy5zY3NzIiwibW9kdWxlcy9fbm9ybWFsaXplLnNjc3MiLCJwYXJ0aWFscy9faGVhZGVyLnNjc3MiLCJwYXJ0aWFscy9fbWFpbi5zY3NzIiwicGFydGlhbHMvX2Zvb3Rlci5zY3NzIiwibW9kdWxlcy9fbWlzYy5zY3NzIiwibW9kdWxlcy9fZm9ybXMuc2NzcyIsIm1vZHVsZXMvX2JyZWFrcG9pbnRzLnNjc3MiLCJtb2R1bGVzL19wcmludC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsMkJBQ0UsWUFBYSxBQUNiLGFBQWUsQ0FDaEIsQUFDRCxRQ0NFLE1EQVMsQ0FEWCxBQVNDLGFBRkcsVUFBWSxDQUNiLEFFWkgsRUFDRSxzQkFBdUIsQUFDdkIsMkJBQTRCLEFBQzVCLGlDQUFtQyxDQUNwQyxBQUNELEtBQ0UsNEJBQWdDLEFBQ2hDLHlCQUNBLEFDUmlCLGlCRFFFLENBQ3BCLEFBRUQsUUFDRSxhQUNBLEFDRmUsa0JERUssQ0FDckIsQUFFRCxrQkFNRSxrQ0FBc0MsQUFDdEMsYUFBZSxDQUNoQixBQUVELEdBQ0UsZUFBZ0IsQUFDaEIsaUJBQW1CLENBQ3BCLEFBRUQsR0FDRSx5QkFBMEIsQUFHMUIsZUFBZ0IsQUFDaEIsUUFBVSxDQUNYLEFBRUQsTUFORSxjQUNBLEFDaENZLDJCRGdDb0IsQ0FLbEMsQUFJQyxHQUZDLG1CQUFzQixDQUV2QixBQUVELEVBQ0UsZUFBaUIsQ0FDbEIsQUFFRCxJQUNFLFlBQWMsQ0FDZixBQUVELFNBQ0Usb0JBQUEsQUFBYyxhQUFBLEFBQ2QsdUJBQUEsQUFBb0Isa0JBQUEsQ0FDckIsQUFFRCxTQUNFLFNBQVcsQ0FDWixBQUVELE1BQ0UsY0FDQSxBQzNEWSxpQ0QyRHdCLEFBQ3BDLGNBQWUsQUFDZixrQkFBb0IsQ0FKdEIsQUFTQyxZQUZHLGFDakVlLENEa0VoQixB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QWUsQUFDZixrQkFBb0IsQ0FDckIsQ0FBQSxBQUdMLDBDQUNFLGdCQUVFLFdBQWEsQ0FDZCxDQUFBLEFDaEdILGFBQ0UsRUFDRSxpQ0FBbUMsQUFDbkMscUJBQXVCLEFBQ3ZCLDBCQUE0QixBQUM1QiwwQkFBNkIsQ0FDOUIsQUFDRCxZQUVFLHlCQUEyQixDQUM1QixBQUNELGNBQ0UsMkJBQTRCLENBQzdCLEFBQ0Qsa0JBQ0UsNEJBQTZCLENBQzlCLEFBQ0QsNERBR0UsVUFBWSxDQUNiLEFBQ0QsZUFFRSxzQkFBdUIsQUFDdkIsdUJBQXlCLENBQzFCLEFBQ0QsTUFDRSwwQkFBNEIsQ0FDN0IsQUFDRCxPQUVFLHVCQUF5QixDQUMxQixBQUNELElBQ0Usd0JBQTJCLENBQzVCLEFBQ0QsTUFDRSxXQUFjLENBQUEsQUFFaEIsUUFHRSxVQUFXLEFBQ1gsUUFBVSxDQUNYLEFBQ0QsTUFFRSxzQkFBd0IsQ0FDekIsQ0FBQSIsImZpbGUiOiJzdHlsZS5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJWNsZWFyIHtcbiAgY29udGVudDogJyAnO1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cbi5jbGVhciB7XG4gICp6b29tOiAxO1xuICAmOmJlZm9yZSB7XG4gICAgQGV4dGVuZCAlY2xlYXI7XG4gIH1cbiAgJjphZnRlciB7XG4gICAgQGV4dGVuZCAlY2xlYXI7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cbiIsIi5jbGVhcjpiZWZvcmUsIC5jbGVhcjphZnRlciB7XG4gIGNvbnRlbnQ6ICcgJztcbiAgZGlzcGxheTogdGFibGU7IH1cblxuLmNsZWFyIHtcbiAgKnpvb206IDE7IH1cbiAgLmNsZWFyOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDsgfVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5OyB9XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogJ0hpbmQnLCBzYW5zLXNlcmlmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xuICBvdmVyZmxvdy14OiBoaWRkZW47IH1cblxuc2VjdGlvbiB7XG4gIHdpZHRoOiAxMDI0cHg7XG4gIG1hcmdpbjogMCBhdXRvIDhyZW07IH1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgY29sb3I6ICMyMTI1Mjk7IH1cblxuaDIge1xuICBmb250LXNpemU6IDNyZW07XG4gIG1hcmdpbjogMCAwIDIuNXJlbTsgfVxuXG5oMyB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjYWRiNWJkO1xuICBmb250LWZhbWlseTogJ0hpbmQnLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDFyZW07XG4gIG1hcmdpbjogMDsgfVxuXG5oNCB7XG4gIGNvbG9yOiAjYWRiNWJkO1xuICBtYXJnaW46IDAuM3JlbSAwIDFyZW07XG4gIGZvbnQtZmFtaWx5OiAnSGluZCcsIHNhbnMtc2VyaWY7IH1cblxucCB7XG4gIG1hcmdpbjogMCAwIDFyZW07IH1cblxucHJlIHtcbiAgbWFyZ2luLXRvcDogMDsgfVxuXG4uY29sdW1ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7IH1cblxuYTphY3RpdmUge1xuICBvdXRsaW5lOiAwOyB9XG5cbi5saW5rIHtcbiAgY29sb3I6ICMyMjhhZTY7XG4gIHRyYW5zaXRpb246IGNvbG9yIDIwMG1zIGVhc2UtaW4tb3V0O1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuICAubGluazpob3ZlciB7XG4gICAgY29sb3I6ICM0ZGFkZjc7IH1cblxuLnRhZ3Mge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBtYXJnaW46IDAgMCAxcmVtO1xuICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgLnRhZ3Mgc3BhbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogMC40cmVtIDAuNXJlbSAwLjJyZW07XG4gICAgZm9udC1zaXplOiAwLjhyZW07XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWRiNWJkO1xuICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gICAgY29sb3I6ICNmZmY7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xuICAgIGN1cnNvcjogZGVmYXVsdDsgfVxuICAgIC50YWdzIHNwYW46bGFzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cblxuLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xudGVtcGxhdGUsXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogM2VtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLmhlYWRlciA+IGgxIHtcbiAgbWFyZ2luOiA0cmVtIDA7IH1cblxuLmhlcm8gPiBhLFxuLmhlcm8gLmFib3V0LW1lIHtcbiAgZmxleDogMTsgfVxuXG4uaGVybyA+IGEge1xuICBoZWlnaHQ6IDI5cmVtOyB9XG4gIC5oZXJvID4gYSAuc2xpZGVzaG93IHtcbiAgICBoZWlnaHQ6IDEwMCU7IH1cblxuLmhlcm8gZGl2IHtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbi1yaWdodDogMnJlbTsgfVxuICAuaGVybyBkaXY6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG5cbi5zbGlkZXNob3cge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1pbi1oZWlnaHQ6IDMwMHB4OyB9XG4gIC5zbGlkZXNob3cgPiBpbWcsXG4gIC5zbGlkZXNob3cgPiBkaXYge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXgtd2lkdGg6IDkwJTtcbiAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIG9wYWNpdHk6IDA7IH1cbiAgLnNsaWRlc2hvdy5lbmFibGVkID4gaW1nLFxuICAuc2xpZGVzaG93LmVuYWJsZWQgPiBkaXYsXG4gIC5zbGlkZXNob3cuZW5hYmxlZCA+IGlmcmFtZSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlLWluLW91dDtcbiAgICBib3gtc2hhZG93OiAwIDAgMCAjY2VkNGRhOyB9XG4gICAgLnNsaWRlc2hvdy5lbmFibGVkID4gaW1nLmFjdGl2ZSxcbiAgICAuc2xpZGVzaG93LmVuYWJsZWQgPiBkaXYuYWN0aXZlLFxuICAgIC5zbGlkZXNob3cuZW5hYmxlZCA+IGlmcmFtZS5hY3RpdmUge1xuICAgICAgYm94LXNoYWRvdzogMCAyMHB4IDIwcHggI2NlZDRkYTtcbiAgICAgIG9wYWNpdHk6IDE7IH1cbiAgLnNsaWRlc2hvdzpub3QoLmVuYWJsZWQpID4gaW1nOmZpcnN0LWNoaWxkLFxuICAuc2xpZGVzaG93Om5vdCguZW5hYmxlZCkgPiBkaXY6Zmlyc3QtY2hpbGQsXG4gIC5zbGlkZXNob3c6bm90KC5lbmFibGVkKSA+IGlmcmFtZTpmaXJzdC1jaGlsZCB7XG4gICAgYm94LXNoYWRvdzogMCAyMHB4IDIwcHggI2NlZDRkYTtcbiAgICBvcGFjaXR5OiAxOyB9XG4gIC5zbGlkZXNob3cgPiAudmlkIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5zb2NpYWwge1xuICBtYXJnaW4tdG9wOiAycmVtOyB9XG4gIC5zb2NpYWwgPiBhIHtcbiAgICBjb2xvcjogI2Y4ZjlmYTtcbiAgICBiYWNrZ3JvdW5kOiAjNDk1MDU3O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgd2lkdGg6IDJyZW07XG4gICAgaGVpZ2h0OiAycmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBsaW5lLWhlaWdodDogMi40cmVtO1xuICAgIG1hcmdpbi1yaWdodDogMC42cmVtO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zIGVhc2UtaW4tb3V0OyB9XG4gICAgLnNvY2lhbCA+IGE6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIyOGFlNjsgfVxuICAgIC5zb2NpYWwgPiBhOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG4gICAgLnNvY2lhbCA+IGEuc29jaWNvbi1pbnN0YWdyYW0sIC5zb2NpYWwgPiBhLnNvY2ljb24tZ2l0aHViLCAuc29jaWFsID4gYS5zb2NpY29uLWZhY2Vib29rLCAuc29jaWFsID4gYS5zb2NpY29uLXR3aXR0ZXIge1xuICAgICAgbGluZS1oZWlnaHQ6IDIuNXJlbTsgfVxuXG4ucHJvamVjdCB7XG4gIG1hcmdpbi1ib3R0b206IDhyZW07IH1cbiAgLnByb2plY3QgLmJvZHkge1xuICAgIHdpZHRoOiA0MCU7IH1cbiAgLnByb2plY3QgLnNsaWRlc2hvdyB7XG4gICAgd2lkdGg6IDYwJTsgfVxuICAucHJvamVjdCAuY29sdW1ucyA+IC52aWQge1xuICAgIHdpZHRoOiA2MCU7XG4gICAgbWFyZ2luOiAwIDFyZW07XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBib3gtc2hhZG93OiAwIDIwcHggMjBweCAjY2VkNGRhOyB9XG4gIC5wcm9qZWN0Om50aC1jaGlsZChvZGQpIC5jb2x1bW5zIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7IH1cblxuLm1vcmUtcHJvamVjdHMgaDMge1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvOyB9XG5cbi5tb3JlLXByb2plY3RzIC5zbGlkZXNob3csXG4ubW9yZS1wcm9qZWN0cyAuYm9keSB7XG4gIGZsZXg6IDE7IH1cblxuLmNhcmQtY29udGFpbmVyLW91dGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC5jYXJkLWNvbnRhaW5lci1vdXRlcjphZnRlciwgLmNhcmQtY29udGFpbmVyLW91dGVyOmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgb3BhY2l0eTogMTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAtMTVweDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDE1cHg7XG4gICAgYm94LXNoYWRvdzogMCAwIDIwcHggI2FkYjViZDtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDMwMG1zIGVhc2UtaW4tb3V0OyB9XG4gIC5jYXJkLWNvbnRhaW5lci1vdXRlcjpiZWZvcmUge1xuICAgIHJpZ2h0OiBhdXRvO1xuICAgIGxlZnQ6IC0xNXB4OyB9XG4gIC5jYXJkLWNvbnRhaW5lci1vdXRlci5oaWRlLXJpZ2h0OmFmdGVyLCAuY2FyZC1jb250YWluZXItb3V0ZXIuaGlkZS1sZWZ0OmJlZm9yZSB7XG4gICAgb3BhY2l0eTogMDsgfVxuXG4uY2FyZC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB3aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3cteDogYXV0bztcbiAgcGFkZGluZzogMXJlbSAycmVtIDQwcHg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OyB9XG4gIC5jYXJkLWNvbnRhaW5lciAuY2FyZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogMXJlbTtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGJveC1zaGFkb3c6IDAgMjBweCAyMHB4ICNjZWQ0ZGE7XG4gICAgd2lkdGg6IDMwcmVtO1xuICAgIG1hcmdpbi1yaWdodDogMnJlbTsgfVxuICAgIC5jYXJkLWNvbnRhaW5lciAuY2FyZC5zbWFsbCB7XG4gICAgICB3aWR0aDogMjByZW07IH1cbiAgICAuY2FyZC1jb250YWluZXIgLmNhcmQ6bGFzdC1jaGlsZCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgIC5jYXJkLWNvbnRhaW5lciAuY2FyZDpsYXN0LWNoaWxkOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyAnO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IDFyZW07XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogLTFyZW07XG4gICAgICAgIHRvcDogMDsgfVxuICAgIC5jYXJkLWNvbnRhaW5lciAuY2FyZCBoMiB7XG4gICAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgICAgIG1hcmdpbjogMC4zcmVtIDAgMXJlbTsgfVxuICAgIC5jYXJkLWNvbnRhaW5lciAuY2FyZCAuYm9keSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGhlaWdodDogMTAwJTsgfVxuICAgIC5jYXJkLWNvbnRhaW5lciAuY2FyZCAuY29sdW1ucyB7XG4gICAgICBoZWlnaHQ6IDEwMCU7IH1cblxuLmJsb2cgLmNvbHVtbnMgPiBkaXYge1xuICB3aWR0aDogNTAlO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nLXJpZ2h0OiAycmVtOyB9XG4gIC5ibG9nIC5jb2x1bW5zID4gZGl2Omxhc3QtY2hpbGQge1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgLmJsb2cgLmNvbHVtbnMgPiBkaXYgaDIge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIGNvbG9yOiAjMjI4YWU2O1xuICAgIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2UtaW4tb3V0OyB9XG5cbi5ibG9nIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgLmJsb2cgYTpob3ZlciBoMiB7XG4gICAgY29sb3I6ICM0ZGFkZjc7IH1cblxuLmZvb3RlciB7XG4gIHBhZGRpbmc6IDJyZW0gMDtcbiAgd2lkdGg6IDEwMjRweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGNvbG9yOiAjYWRiNWJkOyB9XG4gIC5mb290ZXIgLmNvbHVtbnMge1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuICAuZm9vdGVyIGg0LFxuICAuZm9vdGVyIHAge1xuICAgIG1hcmdpbjogMDsgfVxuICAuZm9vdGVyIGEge1xuICAgIGNvbG9yOiAjNGRhZGY3OyB9XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbjo6LW1vei1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuOjotd2Via2l0LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG5pbnB1dCxcbmxhYmVsLFxudGV4dGFyZWEge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5sYWJlbCB7XG4gIGNvbG9yOiAjMjEyNTI5O1xuICBtYXJnaW46IDFyZW0gMCAwLjFyZW07IH1cblxuaW5wdXQsXG50ZXh0YXJlYSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjZWQ0ZGE7XG4gIHJlc2l6ZTogbm9uZTtcbiAgcGFkZGluZzogMC41cmVtO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHdpZHRoOiAzMDBweDsgfVxuICBpbnB1dDpmb2N1cyxcbiAgdGV4dGFyZWE6Zm9jdXMge1xuICAgIG91dGxpbmU6IDA7IH1cblxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMjhhZTY7XG4gIGNvbG9yOiAjZmZmO1xuICBib3JkZXItcmFkaXVzOiAwLjVyZW07XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMzAwbXMgZWFzZS1pbi1vdXQ7XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuICBpbnB1dFt0eXBlPVwic3VibWl0XCJdOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGRhZGY3OyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgc2VjdGlvbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogNXJlbTsgfVxuICBoMiB7XG4gICAgcGFkZGluZzogMCAycmVtO1xuICAgIGZvbnQtc2l6ZTogMnJlbTsgfVxuICBoMixcbiAgaDMsXG4gIGg0LFxuICAuY3JlZGl0cyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIGZvcm0gbGFiZWwge1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICBtYXJnaW46IDFyZW0gYXV0byAwLjFyZW07IH1cbiAgZm9ybSBpbnB1dCxcbiAgZm9ybSB0ZXh0YXJlYSB7XG4gICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgLmhlcm8gPiBhIHtcbiAgICBoZWlnaHQ6IGF1dG87IH1cbiAgICAuaGVybyA+IGEgLnNsaWRlc2hvdyB7XG4gICAgICBoZWlnaHQ6IGF1dG87IH1cbiAgLnNsaWRlc2hvdyB7XG4gICAgbWluLWhlaWdodDogMjAwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gICAgLnNsaWRlc2hvdyA+IGltZyxcbiAgICAuc2xpZGVzaG93ID4gZGl2LFxuICAgIC5zbGlkZXNob3cgPiBpZnJhbWUge1xuICAgICAgdG9wOiBhdXRvOyB9XG4gIC5wcm9qZWN0IHtcbiAgICBtYXJnaW4tYm90dG9tOiA0cmVtOyB9XG4gIC5jb2x1bW5zOm5vdCguc29jaWFsKSB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwYWRkaW5nOiAwIDJyZW07IH1cbiAgICAuY29sdW1uczpub3QoLnNvY2lhbCkgPiAqIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDJyZW0gIWltcG9ydGFudDsgfVxuICAgICAgLmNvbHVtbnM6bm90KC5zb2NpYWwpID4gKjpub3QoLnZpZCkge1xuICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9XG4gICAgICAuY29sdW1uczpub3QoLnNvY2lhbCkgPiAqOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7IH1cbiAgICAuY29sdW1uczpub3QoLnNvY2lhbCkgPiAudmlkIHtcbiAgICAgIHdpZHRoOiA5MCU7XG4gICAgICBtYXJnaW46IDAgYXV0bzsgfVxuICAuc29jaWFsIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAucHJvamVjdDpudGgtY2hpbGQob2RkKSAuY29sdW1ucyB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuICAuY2FyZC1jb250YWluZXIgLmNhcmQge1xuICAgIHdpZHRoOiAyMHJlbTsgfVxuICAuYmxvZyAuY29sdW1ucyA+IGRpdiB7XG4gICAgcGFkZGluZy1yaWdodDogMDsgfVxuICAgIC5ibG9nIC5jb2x1bW5zID4gZGl2IGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9XG4gICAgLmJsb2cgLmNvbHVtbnMgPiBkaXYgPiBhOmZpcnN0LWNoaWxkIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luLWJvdHRvbTogNHJlbTsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIHNlY3Rpb24sXG4gIC5mb290ZXIge1xuICAgIHdpZHRoOiAxMDB2dzsgfSB9XG5cbkBtZWRpYSBwcmludCB7XG4gICoge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDsgfVxuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG4gIGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiOyB9XG4gIGFiYnJbdGl0bGVdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cih0aXRsZSkgXCIpXCI7IH1cbiAgLmlyIGE6YWZ0ZXIsXG4gIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlcixcbiAgYVtocmVmXj1cIiNcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICB0aGVhZCB7XG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOyB9XG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9XG4gIEBwYWdlIHtcbiAgICBtYXJnaW46IDAuNWNtOyB9XG4gIHAsXG4gIGgyLFxuICBoMyB7XG4gICAgb3JwaGFuczogMztcbiAgICB3aWRvd3M6IDM7IH1cbiAgaDIsXG4gIGgzIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDsgfSB9XG4iLCIqIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xufVxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAnSGluZCcsIHNhbnMtc2VyaWY7XG4gIGJhY2tncm91bmQtY29sb3I6ICRsaWdodEdyZXk7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuc2VjdGlvbiB7XG4gIHdpZHRoOiAkc3RkV2lkdGg7XG4gIG1hcmdpbjogMCBhdXRvIDhyZW07XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjMjEyNTI5O1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgbWFyZ2luOiAwIDAgMi41cmVtO1xufVxuXG5oMyB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAkZ3JleTtcbiAgZm9udC1mYW1pbHk6ICdIaW5kJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBtYXJnaW46IDA7XG59XG5cbmg0IHtcbiAgY29sb3I6ICRncmV5O1xuICBtYXJnaW46IDAuM3JlbSAwIDFyZW07XG4gIGZvbnQtZmFtaWx5OiAnSGluZCcsIHNhbnMtc2VyaWY7XG59XG5cbnAge1xuICBtYXJnaW46IDAgMCAxcmVtO1xufVxuXG5wcmUge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4uY29sdW1ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG5cbmE6YWN0aXZlIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLmxpbmsge1xuICBjb2xvcjogJGJsdWU7XG4gIHRyYW5zaXRpb246IGNvbG9yIDIwMG1zIGVhc2UtaW4tb3V0O1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcblxuICAmOmhvdmVyIHtcbiAgICBjb2xvcjogJGxpZ2h0Qmx1ZTtcbiAgfVxufVxuXG4udGFncyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIG1hcmdpbjogMCAwIDFyZW07XG4gIGZsZXgtd3JhcDogd3JhcDtcblxuICBzcGFuIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiAwLjRyZW0gMC41cmVtIDAuMnJlbTtcbiAgICBmb250LXNpemU6IDAuOHJlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmV5O1xuICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG4gICAgY3Vyc29yOiBkZWZhdWx0O1xuXG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICB9XG4gIH1cbn1cbiIsIiRsaWdodEdyZXk6ICNmOGY5ZmE7XG4kbWVkR3JleTogI2NlZDRkYTtcbiRncmV5OiAjYWRiNWJkO1xuJGJ0bkJnOiAjNDk1MDU3O1xuJGxpZ2h0Qmx1ZTogIzRkYWRmNztcbiRibHVlOiAjMjI4YWU2O1xuJHdoaXRlOiAjZmZmO1xuJGJsYWNrOiAjMjEyNTI5O1xuXG4kcmVkOiAjZTAzMTMxO1xuXG4kc3RkV2lkdGg6IDEwMjRweDtcbiIsIi8qISBub3JtYWxpemUuY3NzIHY0LjEuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLCAvKiAxICovXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbiwgLyogMiAqL1xubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHsgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSwgLyogMSAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAzZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG4iLCIuaGVhZGVyIHtcbiAgPmgxIHtcbiAgICBtYXJnaW46IDRyZW0gMDtcbiAgfVxufVxuIiwiLmhlcm8ge1xuICA+YSxcbiAgLmFib3V0LW1lIHtcbiAgICBmbGV4OiAxO1xuICB9XG4gID5hIHtcbiAgICBoZWlnaHQ6IDI5cmVtO1xuXG4gICAgLnNsaWRlc2hvdyB7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgfVxuICB9XG4gIGRpdiB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBtYXJnaW4tcmlnaHQ6IDJyZW07XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIH1cbiAgfVxufVxuXG4uc2xpZGVzaG93IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4taGVpZ2h0OiAzMDBweDtcblxuICA+aW1nLFxuICA+ZGl2IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWF4LXdpZHRoOiA5MCU7XG4gICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBvcGFjaXR5OiAwO1xuICB9XG5cbiAgJi5lbmFibGVkIHtcbiAgICA+aW1nLFxuICAgID5kaXYsXG4gICAgPmlmcmFtZSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAkbWVkR3JleTtcblxuICAgICAgJi5hY3RpdmUge1xuICAgICAgICBib3gtc2hhZG93OiAwIDIwcHggMjBweCAkbWVkR3JleTtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmOm5vdCguZW5hYmxlZCkge1xuICAgID5pbWc6Zmlyc3QtY2hpbGQsXG4gICAgPmRpdjpmaXJzdC1jaGlsZCxcbiAgICA+aWZyYW1lOmZpcnN0LWNoaWxkIHtcbiAgICAgIGJveC1zaGFkb3c6IDAgMjBweCAyMHB4ICRtZWRHcmV5O1xuICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG4gIH1cblxuICA+LnZpZCB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG4uc29jaWFsIHtcbiAgbWFyZ2luLXRvcDogMnJlbTtcblxuICA+YSB7XG4gICAgY29sb3I6ICRsaWdodEdyZXk7XG4gICAgYmFja2dyb3VuZDogJGJ0bkJnO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgd2lkdGg6IDJyZW07XG4gICAgaGVpZ2h0OiAycmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBsaW5lLWhlaWdodDogMi40cmVtO1xuICAgIG1hcmdpbi1yaWdodDogMC42cmVtO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zIGVhc2UtaW4tb3V0O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmx1ZTtcbiAgICB9XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIH1cblxuICAgICYuc29jaWNvbi1pbnN0YWdyYW0sXG4gICAgJi5zb2NpY29uLWdpdGh1YixcbiAgICAmLnNvY2ljb24tZmFjZWJvb2ssXG4gICAgJi5zb2NpY29uLXR3aXR0ZXIge1xuICAgICAgbGluZS1oZWlnaHQ6IDIuNXJlbTtcbiAgICB9XG4gIH1cbn1cblxuLnByb2plY3Qge1xuICBtYXJnaW4tYm90dG9tOiA4cmVtO1xuXG4gIC5ib2R5IHtcbiAgICB3aWR0aDogNDAlO1xuICB9XG5cbiAgLnNsaWRlc2hvdyB7XG4gICAgd2lkdGg6IDYwJTtcbiAgfVxuXG4gIC5jb2x1bW5zPi52aWQge1xuICAgIHdpZHRoOiA2MCU7XG4gICAgbWFyZ2luOiAwIDFyZW07XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBib3gtc2hhZG93OiAwIDIwcHggMjBweCAkbWVkR3JleTtcbiAgfVxuXG4gICY6bnRoLWNoaWxkKG9kZCkge1xuICAgIC5jb2x1bW5zIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgICB9XG4gIH1cbn1cblxuLm1vcmUtcHJvamVjdHMge1xuICBoMyB7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICB9XG5cbiAgLnNsaWRlc2hvdyxcbiAgLmJvZHkge1xuICAgIGZsZXg6IDE7XG4gIH1cbn1cblxuLmNhcmQtY29udGFpbmVyLW91dGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICY6YWZ0ZXIsXG4gICY6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvcGFjaXR5OiAxO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IC0xNXB4O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTVweDtcbiAgICBib3gtc2hhZG93OiAwIDAgMjBweCAkZ3JleTtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDMwMG1zIGVhc2UtaW4tb3V0O1xuICB9XG5cbiAgJjpiZWZvcmUge1xuICAgIHJpZ2h0OiBhdXRvO1xuICAgIGxlZnQ6IC0xNXB4O1xuICB9XG5cbiAgJi5oaWRlLXJpZ2h0OmFmdGVyLFxuICAmLmhpZGUtbGVmdDpiZWZvcmUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuLmNhcmQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIHBhZGRpbmc6IDFyZW0gMnJlbSA0MHB4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcblxuICAuY2FyZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xuICAgIHBhZGRpbmc6IDFyZW07XG4gICAgYm94LXNoYWRvdzogMCAyMHB4IDIwcHggJG1lZEdyZXk7XG4gICAgd2lkdGg6IDMwcmVtO1xuICAgIG1hcmdpbi1yaWdodDogMnJlbTtcblxuICAgICYuc21hbGwge1xuICAgICAgd2lkdGg6IDIwcmVtO1xuICAgIH1cblxuICAgICY6bGFzdC1jaGlsZCB7IC8vIHdoaXRlc3BhY2UgaXNzdWUgZml4XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnICc7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMXJlbTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAtMXJlbTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogMS40cmVtO1xuICAgICAgbWFyZ2luOiAwLjNyZW0gMCAxcmVtO1xuICAgIH1cblxuICAgIC5ib2R5IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cblxuICAgIC5jb2x1bW5zIHtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG4gIH1cbn1cblxuLmJsb2cge1xuICAuY29sdW1ucyB7XG4gICAgPmRpdiB7XG4gICAgICB3aWR0aDogNTAlO1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDJyZW07XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICB9XG5cbiAgICAgIGgyIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgY29sb3I6ICRibHVlO1xuICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLWluLW91dDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBhIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICAmOmhvdmVyIGgye1xuICAgICAgY29sb3I6ICRsaWdodEJsdWU7XG4gICAgfVxuICB9XG59XG4iLCIuZm9vdGVyIHtcbiAgcGFkZGluZzogMnJlbSAwO1xuICB3aWR0aDogJHN0ZFdpZHRoO1xuICBtYXJnaW46IDAgYXV0bztcbiAgY29sb3I6ICRncmV5O1xuXG4gIC5jb2x1bW5zIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cblxuICBoNCxcbiAgcCB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG5cbiAgYSB7XG4gICAgY29sb3I6ICRsaWdodEJsdWU7XG4gIH1cbn1cbiIsIjo6c2VsZWN0aW9ue1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG46Oi1tb3otc2VsZWN0aW9ue1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG46Oi13ZWJraXQtc2VsZWN0aW9ue1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG4iLCJpbnB1dCxcbmxhYmVsLFxudGV4dGFyZWEge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxubGFiZWwge1xuICBjb2xvcjogJGJsYWNrO1xuICBtYXJnaW46IDFyZW0gMCAwLjFyZW07XG59XG5cbmlucHV0LFxudGV4dGFyZWEge1xuICBib3JkZXI6IDFweCBzb2xpZCAkbWVkR3JleTtcbiAgcmVzaXplOiBub25lO1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgd2lkdGg6IDMwMHB4O1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IDA7XG4gIH1cbn1cblxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICRibHVlO1xuICBjb2xvcjogJHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiAwLjVyZW07XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMzAwbXMgZWFzZS1pbi1vdXQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcblxuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbGlnaHRCbHVlO1xuICB9XG59XG4iLCJAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MzIwcHgpIHtcblxufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOjQ4MHB4KSB7XG5cbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo3NjhweCkge1xuICBzZWN0aW9uIHtcbiAgICBtYXJnaW4tYm90dG9tOiA1cmVtO1xuICB9XG4gIGgyIHtcbiAgICBwYWRkaW5nOiAwIDJyZW07XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIGgyLFxuICBoMyxcbiAgaDQsXG4gIC5jcmVkaXRze1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICBmb3JtIHtcbiAgICBsYWJlbCB7XG4gICAgICB3aWR0aDogMzAwcHg7XG4gICAgICBtYXJnaW46IDFyZW0gYXV0byAwLjFyZW07XG4gICAgfVxuICAgIGlucHV0LFxuICAgIHRleHRhcmVhIHtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgfVxuICAuaGVybz5hIHtcbiAgICBoZWlnaHQ6IGF1dG87XG5cbiAgICAuc2xpZGVzaG93IHtcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICB9XG4gIH1cbiAgLnNsaWRlc2hvdyB7XG4gICAgbWluLWhlaWdodDogMjAwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgPmltZyxcbiAgICA+ZGl2LFxuICAgID5pZnJhbWUge1xuICAgICAgdG9wOiBhdXRvO1xuICAgIH1cbiAgfVxuICAucHJvamVjdCB7XG4gICAgbWFyZ2luLWJvdHRvbTogNHJlbTtcbiAgfVxuICAuY29sdW1uczpub3QoLnNvY2lhbCkge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcGFkZGluZzogMCAycmVtO1xuXG4gICAgPioge1xuICAgICAgJjpub3QoLnZpZCkge1xuICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgICAgfVxuICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbSAhaW1wb3J0YW50O1xuXG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gICAgICB9XG4gICAgfVxuICAgID4udmlkIHtcbiAgICAgIHdpZHRoOiA5MCU7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG4gIH1cbiAgLnNvY2lhbCB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH1cbiAgLnByb2plY3Q6bnRoLWNoaWxkKG9kZCkgLmNvbHVtbnMge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmNhcmQtY29udGFpbmVyIC5jYXJkIHtcbiAgICB3aWR0aDogMjByZW07XG4gIH1cbiAgLmJsb2cgLmNvbHVtbnM+ZGl2e1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7XG5cbiAgICBoMiB7XG4gICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICB9XG4gICAgPmE6Zmlyc3QtY2hpbGQge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW4tYm90dG9tOiA0cmVtO1xuICAgIH1cbiAgfVxufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjEwMjRweCkge1xuICBzZWN0aW9uLFxuICAuZm9vdGVyIHtcbiAgICB3aWR0aDogMTAwdnc7XG4gIH1cbn1cbkBtZWRpYSBwcmludCwgKC1vLW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDUvNCksICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuMjUpLCAobWluLXJlc29sdXRpb246IDEyMGRwaSkge1xuXG59XG4iLCJAbWVkaWEgcHJpbnQge1xuICAqIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuICBhW2hyZWZdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjtcbiAgfVxuICBhYmJyW3RpdGxlXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiO1xuICB9XG4gIC5pciBhOmFmdGVyLFxuICAgYVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyLFxuICAgYVtocmVmXj1cIiNcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gIH1cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuICB0aGVhZCB7XG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xuICB9XG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuICBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIEBwYWdlIHtcbiAgICBtYXJnaW46IDAuNWNtO1xuICB9XG4gIHAsXG4gIGgyLFxuICBoMyB7XG4gICAgb3JwaGFuczogMztcbiAgICB3aWRvd3M6IDM7XG4gIH1cbiAgaDIsXG4gIGgzIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDtcbiAgfVxufVxuIl19 */
